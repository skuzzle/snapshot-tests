plugins {
    id("org.asciidoctor.jvm.convert") version "3.3.2"
    id("snapshot-tests.java-conventions")
}

dependencies {
    testImplementation(projects.snapshotTestsJunit5)
    testImplementation(projects.snapshotTestsJackson)
    testImplementation(projects.snapshotTestsJaxb)
}

asciidoctor {
    sourceDir file("src/docs/asciidoc")
    attributes([
            "revnumber"         : { project.version.toString() },
            "groupId"           : project.group,
            "source-highlighter": "coderay",
            "toc"               : "left",
            "icons"             : "font",
            "setanchors"        : "true",
            "docinfo1"          : "true"
    ])
}
def repositoryDeployPathLatest = project.rootProject.file("docs/reference/latest")
def repositoryDeployPathCurrent = project.rootProject.file("docs/reference/" + project.version)

tasks.register("deployDocsToRepositoryRoot") {
    group = "release-relevant"
    dependsOn("deployDocsToRepositoryRootLatest", "deployDocsToRepositoryRootCurrent")
}

tasks.register("wipeLatestDocsFolder", Delete) {
    group = "release-relevant"
    delete(repositoryDeployPathLatest)
}

tasks.register("deployDocsToRepositoryRootLatest", Copy) {
    group = "release-relevant"
    dependsOn("asciidoctor", "wipeLatestDocsFolder")
    from(asciidoctor.outputs.files)
    into(repositoryDeployPathLatest)
}

tasks.register("deployDocsToRepositoryRootCurrent", Copy) {
    group = "release-relevant"
    dependsOn("asciidoctor")
    from(asciidoctor.outputs.files)
    into(repositoryDeployPathCurrent)
}